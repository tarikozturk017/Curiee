import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { atom, useAtom } from 'jotai';
const jwt = require('jsonwebtoken');

import Head from 'next/head'
import SideBar from "./SideBar";
import Navbar from './Navbar';
import Footer from "./Footer";

// create the atom
const userIdAtom = atom('');
const userTypeAtom = atom('');
const userTokenAtom = atom('');

const protectedRoutes = ['/patients'];

const Layout = (props) => {
  const [userId, setUserId] = useAtom(userIdAtom);
  const [userType, seUserType] = useAtom(userTypeAtom);
  const [userToken, seUserToken] = useAtom(userTokenAtom);
  const router = useRouter();

  useEffect(() => {
    if(userToken !== '') {
      try {
        const decodedToken = jwt.decode(userToken);
        const patientId = decodedToken.patientId;
        if (patientId) {
          setUserId(patientId);
          seUserType('patient');       
        } else {
          const therapistId = decodedToken.therapistId
          setUserId(therapistId);
          seUserType('therapist');
        }
      } catch (error) {
        console.log(error)
      }
    }
    
  }, [userToken]);

  useEffect(() => {
    const token = localStorage.getItem('token');
    // console.log(`token: ${token}`)
    seUserToken(token)
    if (!token && protectedRoutes.includes(router.pathname)) {
      console.log('not logged in')
      router.push('/login');
    }
  }, []);

  useEffect(() => {
    const token = localStorage.getItem('token');
    if (!token && protectedRoutes.includes(router.pathname)) {
      console.log('not logged in')
      router.push('/login');
    }
  }, [router]);

    return (
        <>
            <Head>
                <title>Patient Management System</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <Navbar />
            {/* if user logged in, display sidebar */}
            {userToken !== '' && <SideBar />}
            <div className=" h-screen bg-gradient-to-tr from-cyan-300 to-blue-300">
                {props.children}
            </div>
            <Footer />
        </>
    )
}

export default Layout;
export { userIdAtom, userTypeAtom, userTokenAtom };